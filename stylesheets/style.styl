@import 'mixin'
@import 'placeholders'

fontsDir = '../fonts'
main-color = rgb(57,187,209)
second-color = rgb(235,235,235)

//===========animation=============
speed = 30// viewport width or height per second

animTimeFunc = cubic-bezier(0.075, 0.82, 0.165, 1)
rocketComeDelay = 4.5s

*
	box-sizing border-box
	
body
	background main-color
	font-size 120%
	overflow hidden
	@media screen and (max-width: 992px)
			font-size 80%
.container
	.tracks
		absolute top 18px left 1px
		.track
			position relative
			width 20px
			height (@width/2)
			border-radius 50%
			bgYellow = #FFC807
			bgRed = #FF2C07
			background linear-gradient(left,bgRed 10%,bgYellow 90%)
			&:before
				content ''
				background linear-gradient(left,bgRed 40%,bgYellow 90%)
				border-radius 50%
				absolute top left
				width 120%
				left -20%
				height 100%
				animation gradientAnim .5s linear alternate infinite
			@keyframes gradientAnim
				from
					opacity .3
				to
					width 100%
					left 0
					opacity 1

			&:nth-child(2)
				margin-left -3px
	#planet
		position relative
		width 250px
		height @width
		background second-color
		sS = 20px //shadowSize
		box-shadow inset - sS  (- sS) (sS/3) (sS/3) darken(second-color, 20%)
		border-radius 50%
		margin 7% auto 0 auto
		#rocket-free-wrap
			$animTimeFunc = cubic-bezier(0.55, 0.055, 0.675, 0.19)
			div[class^='free-wrap']
				position absolute
				.rocket
					position relative
					.rocket-compon-wrap
						transform rotate(-15deg)
						.track
							&:before
								width 180%
								left -80%
					&:after
						content ''
						width 1px
						height 60%
						background white
						absolute top 75% left 40%
				img.component
					position relative
					margin 20px 0 0 23px
					display block
					z-index 2
					transition all .5s 2s
					// animation pinionRotate 4s infinite linear
					@keyframes pinionRotate
						from
							transform rotate(-180deg)
						to
							transform rotate(180deg)
			.free-wrap-first
				top -70px
				left 30px
				coords = {
					x: -30vw 40vw
					y: 30vh -50vh
				}
				freeWrapFly(speed,coords,$animTimeFunc,80)
				.component
					animation-direction normal 
			.free-wrap-second
				top -35px
				left 80px
				coords = {
					x: -60vw 40vw
					y: 0vh -50vh
				}
				freeWrapFly(speed,coords,$animTimeFunc,80)
				.component
					animation-duration 2.2s
			.free-wrap-third
				top 30px
				left 90px
				coords = {
					x: 60vw -40vw
					y: 30vh -40vh
				}
				freeWrapFly(speed,coords,$animTimeFunc,80)
				.component
					animation-timing-function ease !important
					animation-duration 2s
					// animation-direction alternate
				.rocket
					.rocket-compon-wrap
						transform rotate(-165deg) !important
	#rocket-plate-wrap
		$animTimeFunc = cubic-bezier(0.23, 1, 0.32, 1)
		$animDelay = rocketComeDelay
		
		//main flying and delivery plate
		coords = {
			x: -100vw 0vw,
			y: 50vh 0vh
		}
		countedAnimData = fly(speed,coords,$animDelay $animTimeFunc backwards,,false)//this work only like function and return value

		//trembling after delivery
		//tb - trembling, T - time, D - delay, F - function
		$tbAnimTF = linear; $tbAnimT = 1s;$tbAnimD = countedAnimData.animArg[1]; $tbOffset = 4px
		$tbAnimCoords = {
			x:0 0,
			y:0 (- unit($tbOffset/4,'vh'))
		}
		fly($tbAnimT, $tbAnimCoords, $tbAnimTF alternate infinite,,true, countedAnimData)
		
		width 700px
		+adaptiveForSmall()
			width 92%
			left 2%
		position absolute
		left calc(50% - 350px)
		

		$offset = 70
		$plateAnimTime = countedAnimData.animArg[1]/2.5
		$plateAnimTimeFunc = cubic-bezier(0.895, 0.03, 0.685, 0.22)
		#rocket-wrap
			width 100%
			position relative
			z-index 2
			.rocket
				width 13%
				position absolute
				.tracks
					top 22%
					height 17%
					.track
						height 100%
				&:nth-child(1)
					left 3.5%
				&:nth-child(2)
					right -2%
				
				&:after,&:before
					content ''
					background rgba(30,30,30,.8)
					width 1px
					height 85px
					absolute top 68% left
					margin-left 26%
					transform-origin 0 0
					animation rocketTrembling $tbAnimT $tbAnimD $tbAnimTF alternate infinite, 
							rocketAxisMove $plateAnimTime $animDelay $plateAnimTimeFunc
					@keyframes rocketAxisMove
						from
							transform rotate(unit($offset/1.2,deg))
						to
							transform rotate(0)
					@keyframes rocketTrembling
						from
							transform rotate(0)
						to
							transform rotate(unit($tbOffset/1.2,deg))
				&:before
					left 1%
				&:after
					left 5%
				img
					max-width 100%
		#plate-wrap
			width 100%
			text-align center
			position relative
			padding-top 112px
			margin 0 auto
			color darken(main-color,30)
			animation plateTrumbling $tbAnimT $tbAnimTF $tbAnimD alternate infinite, 
					plateMove $plateAnimTime $animDelay $plateAnimTimeFunc
			@keyframes plateMove
				from
					transform translateX( unit(- $offset,'px')) \
										translateY(unit(- abs($offset/2),'px'))
				to
					transform translateX(0) translateY(0)
			@keyframes plateTrumbling
				from
					transform translateX(0) translateY(0)
				to
					transform translateX( unit(- $tbOffset,'px')) \
										translateY(unit(- abs($tbOffset/2),'px'))
			#plate
				background second-color
				width 90%
				left 5%
				text-align center
				padding 20px 0
				margin-bottom 20px
				position relative
				h1
					margin 0
					text-transform uppercase
					font-size 290%
					font-weight 300
					@font-face
						src url(fontsDir/TESLA.ttf)
						font-family Tesla
					font-family Tesla,sans-serif
				h4
					margin 0 0 1% 0
					font-size 150%
					@font-face
						src url(fontsDir/BebasNeueRegular.otf)
						font-family BebasNeue
					font-family BebasNeue
				p
					font-size 80%
					margin 0
					position relative
					&:before,
					&:after
						content ''
						width 10%
						height 1px
						background black
					&:before
						absolute top 50% left 25%
					&:after
						absolute top 50% right 25%
				&:after,
				&:before
					content ''
					width 20px
					height @width
					border-radius 50%
					background main-color
					@media screen and (max-width:992px)
						width (@width/1.5)
						height @width
				&:after
					absolute top 4% left 1%
				&:before
					absolute top 4% right 1%
	>img
		position fixed
		opacity .8
		animation iconRotate 4s  cubic-bezier(0.6, -0.28, 0.735, 0.045) infinite both alternate
		@keyframes iconRotate
			from
				transform rotate(-20deg)
			to
				transform rotate(20deg)
		&.wait
			top 37%
			left 30%
			animation-direction alternate-reverse
		&.scissors
			top 10%
			left 8%
		&.settings
			right 20%
			top 10%
		&.adjustment
			bottom 20%
			right 8%

		